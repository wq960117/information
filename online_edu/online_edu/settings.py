"""
Django settings for online_edu project.

Generated by 'django-admin startproject' using Django 2.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '9zsuby%wmv-=vp6krkbi_qa-f^m*q4c3ifc-=sil2h5$=qn8hv'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'edu',
    'rest_framework',
    'shop',
    'djcelery',
    'rest_framework_jwt'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'online_edu.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'online_edu.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'HOST':'localhost',
#         'PORT':3306,
#         'USER':'root',
#         'PASSWORD':'',
#         'NAME':'edu'
#     }
# }
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'HOST': '123.57.93.89',  # 数据库主机
        'PORT': 3306,  # 数据库端口
        'USER': 'root',  # 数据库用户名
        'PASSWORD': 'root',  # 数据库用户密码
        'NAME': 'edu'  # 数据库名字
    },
    'slave': {
        'ENGINE': 'django.db.backends.mysql',
        'HOST': '101.37.25.38',  # 数据库主机
        'PORT': 3306,  # 数据库端口
        'USER': 'root',  # 数据库用户名
        'PASSWORD': 'root',  # 数据库用户密码
        'NAME': 'edu'  # 数据库名字
    }
}
#
# 配置读写分离
DATABASE_ROUTERS = ['utils.db_router.MasterSlaveRouter']

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'zh-Hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS=[os.path.join(BASE_DIR,'static')]
UPLOAD = os.path.join(BASE_DIR,'static/upload/')
# 邮件配置
EMAIL_USE_SSL = True # Secure Sockets Layer 安全套接层, 取决于邮件服务器是否开启加密协议
EMAIL_HOST = 'smtp.qq.com'  # 邮件服务器地址
EMAIL_PORT = 465 # 邮件服务器端口
EMAIL_HOST_USER = '1334178184@qq.com' # 登陆邮件服务器的账号
EMAIL_HOST_PASSWORD = 'qecfxmeqchwajhcd'  # 登陆邮件服务器的密码
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER # 邮件的发送者
# 异步发邮件
import djcelery
djcelery.setup_loader()
# BROKER_URL = 'redis://127.0.0.1:6379/1'  # 消息队列
CELERY_IMPORTS = ('shop.task')  # 任务路径
# CELERY_RESULT_BACKEND = 'redis://127.0.0.1:6379/2'  # 结果存储
BROKER_URL = 'amqp://root:root@120.27.246.172:5672/myvhost'
CELERY_RESULT_BACKEND = 'amqp://root:root@120.27.246.172:5672/myvhost'

# redis配置
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            "CONNECTION_POOL_KWARGS": {"max_connections": 1000}
            # "PASSWORD": "123",
        }
    }
}
# 定时任务 minute(分钟)  hour(小时,钟头)   dat_for_month(‘1’)(每月的第几天)
# 这些都可以套用,比如:
# 每月1号的6点启动
# 'schedule': crontab(hour=6, minute=0, day_of_month='1'),
from celery.schedules import crontab
CELERYBEAT_SCHEDULE = {
    #定时任务一：　每一分钟执行一次任务(add_redis_data)
    u'定义一个任务名为:AddSk': {
        "task": "shop.task.AddSk",
        # "schedule": crontab(hour='*/1'),
        "schedule": crontab(hour='*'),
        "args": (),
},
 #定时任务二：　每一分钟执行一次任务(del_redics_data)
    u'定义一个任务名为:DelSk': {
        "task": "shop.task.DelSk",
        # "schedule": crontab(hour='*/1'),
        # "schedule": crontab('59 23 * * *'),
        "schedule": crontab(hour='*'),
        "args": (),
},
}
